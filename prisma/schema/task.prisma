model BoardModel {
  id      String @id @default(uuid()) @db.Uuid
  name    String
  ownerId String @map("owner_id") @db.Uuid

  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime  @default(now()) @map("updated_at") @db.Timestamptz()
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz()

  steps StepModel[]

  owner UserModel @relation(fields: [ownerId], references: [id])

  @@map("board")
}

model StepModel {
  id      String @id @default(uuid()) @db.Uuid
  boardId String @map("board_id") @db.Uuid
  name    String

  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime  @default(now()) @map("updated_at") @db.Timestamptz()
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz()

  board BoardModel @relation(fields: [boardId], references: [id])

  tasks TaskModel[]

  @@map("step")
}

model TaskModel {
  id          String    @id @default(uuid()) @db.Uuid
  stepId      String    @map("step_id") @db.Uuid
  title       String
  description String?
  assigneeId  String?   @map("assignee_id") @db.Uuid
  dueDate     DateTime? @map("due_date")
  priority    String?

  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime  @default(now()) @map("updated_at") @db.Timestamptz()
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz()

  step     StepModel  @relation(fields: [stepId], references: [id])
  assignee UserModel? @relation(fields: [assigneeId], references: [id])

  @@map("task")
}
